<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Mds-MacBook-Pro.local" name="Regrassion Test" tests="42" failures="0" timestamp="15 Aug 2015 17:41:31 GMT" time="8.94" errors="0">
  <testcase name="@BeforeTest testSetUp" time="0.0" classname="tests.WithdrawTest">
    <failure type="java.io.FileNotFoundException" message="/Users/Zakia/git/LocalGuru99Bank/Guru99Bank/src/testData/Workbook4.xls (No such file or directory)">
      <![CDATA[java.io.FileNotFoundException: /Users/Zakia/git/LocalGuru99Bank/Guru99Bank/src/testData/Workbook4.xls (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at util.ReadData.readDataFromExcel(Unknown Source)
	at base.TestBase.testSetUp(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
    </failure>
  </testcase> <!-- @BeforeTest testSetUp -->
  <testcase name="@BeforeClass testClassSetup" time="0.0" classname="tests.LogInTest">
    <skipped/>
  </testcase> <!-- @BeforeClass testClassSetup -->
  <testcase name="testInvalidAccountBalanceEnquiry" time="0.0" classname="tests.BalanceEnquiryTest">
    <skipped/>
  </testcase> <!-- testInvalidAccountBalanceEnquiry -->
  <testcase name="testValidAccountBalanceEnquiry" time="0.0" classname="tests.BalanceEnquiryTest">
    <skipped/>
  </testcase> <!-- testValidAccountBalanceEnquiry -->
  <testcase name="testInvalidAccountCuatomizedStatement" time="0.0" classname="tests.CustomisedStatementTest">
    <skipped/>
  </testcase> <!-- testInvalidAccountCuatomizedStatement -->
  <testcase name="testValidAccountCuatomizedStatement" time="0.0" classname="tests.CustomisedStatementTest">
    <skipped/>
  </testcase> <!-- testValidAccountCuatomizedStatement -->
  <testcase name="testDeleteInvalidAccount" time="0.001" classname="tests.DeleteAccountTest">
    <skipped/>
  </testcase> <!-- testDeleteInvalidAccount -->
  <testcase name="testUndeleteValidAccount" time="0.0" classname="tests.DeleteAccountTest">
    <skipped/>
  </testcase> <!-- testUndeleteValidAccount -->
  <testcase name="testDeleteCustomer" time="0.0" classname="tests.DeleteCustomerTest">
    <skipped/>
  </testcase> <!-- testDeleteCustomer -->
  <testcase name="testDeleteCustomerDoesNotExist" time="0.0" classname="tests.DeleteCustomerTest">
    <skipped/>
  </testcase> <!-- testDeleteCustomerDoesNotExist -->
  <testcase name="testDepositInvalidAccount" time="0.0" classname="tests.DepositTest">
    <skipped/>
  </testcase> <!-- testDepositInvalidAccount -->
  <testcase name="testDepositValidAccount" time="0.0" classname="tests.DepositTest">
    <skipped/>
  </testcase> <!-- testDepositValidAccount -->
  <testcase name="testChangeAccountType" time="0.0" classname="tests.EditAccountTest">
    <skipped/>
  </testcase> <!-- testChangeAccountType -->
  <testcase name="testChangeAccountTypeNew" time="0.0" classname="tests.EditAccountTest">
    <skipped/>
  </testcase> <!-- testChangeAccountTypeNew -->
  <testcase name="testEditCustomerChangeAddress" time="0.0" classname="tests.EditCustomerTest">
    <skipped/>
  </testcase> <!-- testEditCustomerChangeAddress -->
  <testcase name="testEditCustomerChangeAddressNo" time="0.0" classname="tests.EditCustomerTest">
    <skipped/>
  </testcase> <!-- testEditCustomerChangeAddressNo -->
  <testcase name="testInvalidFundTransfer" time="0.0" classname="tests.FundTransferTest">
    <skipped/>
  </testcase> <!-- testInvalidFundTransfer -->
  <testcase name="testValidFundTransfer" time="0.0" classname="tests.FundTransferTest">
    <skipped/>
  </testcase> <!-- testValidFundTransfer -->
  <testcase name="testClickGenerateAccess" time="0.0" classname="tests.LogInTest">
    <skipped/>
  </testcase> <!-- testClickGenerateAccess -->
  <testcase name="testLoginBlankUsernamePassword" time="0.0" classname="tests.LogInTest">
    <skipped/>
  </testcase> <!-- testLoginBlankUsernamePassword -->
  <testcase name="testLoginEmptyUsernamePassword" time="0.0" classname="tests.LogInTest">
    <skipped/>
  </testcase> <!-- testLoginEmptyUsernamePassword -->
  <testcase name="testLoginInvalidUsernamePassword" time="0.0" classname="tests.LogInTest">
    <skipped/>
  </testcase> <!-- testLoginInvalidUsernamePassword -->
  <testcase name="testValidLogIn" time="0.0" classname="tests.LogInTest">
    <skipped/>
  </testcase> <!-- testValidLogIn -->
  <testcase name="testBlickManagerLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testBlickManagerLink -->
  <testcase name="testClickBalanceEnquiryLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickBalanceEnquiryLink -->
  <testcase name="testClickChangePasswordLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickChangePasswordLink -->
  <testcase name="testClickCustomisedStatementLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickCustomisedStatementLink -->
  <testcase name="testClickDeleteAccountLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickDeleteAccountLink -->
  <testcase name="testClickDeleteCustomerLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickDeleteCustomerLink -->
  <testcase name="testClickDepositLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickDepositLink -->
  <testcase name="testClickEditAccountLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickEditAccountLink -->
  <testcase name="testClickEditCustomerLinkLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickEditCustomerLinkLink -->
  <testcase name="testClickFundTransferLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickFundTransferLink -->
  <testcase name="testClickMiniStatementLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickMiniStatementLink -->
  <testcase name="testClickNewAccountLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickNewAccountLink -->
  <testcase name="testClickNewCustomerLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickNewCustomerLink -->
  <testcase name="testClickWithdrawalLink" time="0.0" classname="tests.ManagerMenuTest">
    <skipped/>
  </testcase> <!-- testClickWithdrawalLink -->
  <testcase name="testInvalidAccountMiniStatementTest" time="0.0" classname="tests.MiniStatementTest">
    <skipped/>
  </testcase> <!-- testInvalidAccountMiniStatementTest -->
  <testcase name="testValidAccountMiniStatementTest" time="0.0" classname="tests.MiniStatementTest">
    <skipped/>
  </testcase> <!-- testValidAccountMiniStatementTest -->
  <testcase name="testAddNewAccount" time="0.0" classname="tests.NewAccountTest">
    <skipped/>
  </testcase> <!-- testAddNewAccount -->
  <testcase name="testInvalidCustomerId" time="0.0" classname="tests.NewAccountTest">
    <skipped/>
  </testcase> <!-- testInvalidCustomerId -->
  <testcase name="testAddNewCustomer" time="0.0" classname="tests.NewCustomerTest">
    <skipped/>
  </testcase> <!-- testAddNewCustomer -->
  <testcase name="testWithdrawInvalidAccount" time="0.0" classname="tests.WithdrawTest">
    <skipped/>
  </testcase> <!-- testWithdrawInvalidAccount -->
  <testcase name="testWithdrawValidAccount" time="0.0" classname="tests.WithdrawTest">
    <skipped/>
  </testcase> <!-- testWithdrawValidAccount -->
</testsuite> <!-- Regrassion Test -->
